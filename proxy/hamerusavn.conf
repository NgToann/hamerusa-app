    upstream hamerapp {
        server app:8000;
    }

    #server {
    #    listen 80;
    #    server_name   hamerusa.vn;
    #    location / {
    #        proxy_pass http://hamerapp;
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #        proxy_set_header Host $host;
    #        proxy_redirect off;
    #    }
    #
    #    location /static {
    #        alias /vol/static;
    #    }
    #}

    server {
        listen 80;
        listen [::]:80;
        return 301 https://hamerusa.vn$request_uri;
    }

    server {
        listen [::]:443 ssl;
        listen 443 ssl;
        server_name hamerusa.vn;

        # Let's Encrypt parameters
        ssl_certificate     /etc/nginx/hamerusavn.crt;
        ssl_certificate_key /etc/nginx/hamerusavn.key;
        #include /etc/letsencrypt/options-ssl-nginx.conf;
        #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location /static {
            alias /vol/static;
        }
        
        charset       utf-8;
        client_max_body_size    100M;

        location / {
            proxy_pass		http://hamerapp;
            proxy_redirect		off;

            proxy_set_header 	Host			$http_host;
            proxy_set_header	X-Real-IP		$remote_addr;
            proxy_set_header	X-Forwarded-For		$proxy_add_x_forwarded_for;
            proxy_set_header	X-Forwarded-Proto	https;
        }
    }


    #server {
    #    listen 80;
    #    listen 443 ssl http2;
    #    server_name   hamerusa.vn;
    #    ssl_certificate       /etc/nginx/hamerusavn.crt;
    #    ssl_certificate_key   /etc/nginx/hamerusavn.key;
    #
    #    location /static {
    #        alias /vol/static;
    #    }
    #
    #    location / {
    #        # checks for static file, if not found proxy to app
    #        try_files $uri @proxy_to_app;
    #    }
    #
    #    location @proxy_to_app {
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #        proxy_set_header X-Forwarded-Proto $scheme;
    #        proxy_set_header Host $http_host;
    #        # we don't want nginx trying to do something clever with
    #        # redirects, we set the Host: header above already.
    #        proxy_redirect off;
    #        proxy_pass http://hamerapp;
    #    }
    #}

    ################################################################
    #server {
    #    listen        80;
    #    server_name   hamerusa.vn;
    #    return 301 https://$host$request_uri;
    #}
    #
    #server {
    #    listen        443 ssl;
    #    server_name   hamerusa.vn;
    #    charset       utf-8;
    #    #access_log    /www/log/access.log combined;
    #    #error_log     /www/log/error.log error;
    #
    #    ssl_certificate       /etc/nginx/hamerusavn.crt;
    #    ssl_certificate_key   /etc/nginx/hamerusavn.key;
    #
    #    client_max_body_size    100M;
    #
    #    location /static {
    #        alias /vol/static;
    #    }
    #
    #    location / {
    #        proxy_pass http://hamerapp;
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #        proxy_set_header Host $host;
    #        proxy_set_header X-Forwarded-Proto https;
    #        proxy_redirect off;
    #    }
    #}

    ################################################################
    #upstream hamerapp {
    #    server app:8000;
    #}
    #
    #server {
    #    listen        80;
    #    server_name   hamerusa.vn;
    #    return 301 https://$host$request_uri;
    #}
    #
    #server {
    #    listen 443 ssl http2;
    #    server_name   hamerusa.vn;
    #    ssl_certificate       /etc/nginx/hamerusavn.crt;
    #    ssl_certificate_key   /etc/nginx/hamerusavn.key;
    #
    #    location /static {
    #        alias /vol/static;
    #    }
    #
    #    location / {
    #        # checks for static file, if not found proxy to app
    #        try_files $uri @proxy_to_app;
    #    }
    #
    #    location @proxy_to_app {
    #        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #        proxy_set_header X-Forwarded-Proto $scheme;
    #        proxy_set_header Host $http_host;
    #        # we don't want nginx trying to do something clever with
    #        # redirects, we set the Host: header above already.
    #        proxy_redirect off;
    #        proxy_pass http://hamerapp;
    #    }
    #}